plugins {
    id 'com.android.application'
    id 'checkstyle'
    id 'jacoco'
    id 'de.mannodermaus.android-junit5'
}

android {
    namespace 'app.notesr'
    compileSdk 34

    buildFeatures.buildConfig true

    defaultConfig {
        applicationId "app.notesr"
        minSdk 29
        targetSdk 34
        versionCode 52
        versionName "5.2.0"
        buildConfigField "int", "DATA_SCHEMA_VERSION", "2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
            enableUnitTestCoverage true
            enableAndroidTestCoverage true
        }

        debug {
            applicationIdSuffix ".debug"
            enableUnitTestCoverage true
            enableAndroidTestCoverage true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}

checkstyle {
    toolVersion = "10.12.5"
}

jacoco {
    toolVersion = "0.8.10"
}

tasks.register('checkstyle', Checkstyle) {
    group = "verification"
    description = "Runs Checkstyle for Java source files"

    configFile = rootProject.file("config/checkstyle/checkstyle.xml")

    source 'src/main/java'
    include '**/*.java'

    classpath = files()
}

tasks.named("check") {
    dependsOn("checkstyle")
}

tasks.withType(Test).configureEach {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

tasks.register('jacocoTestReport', JacocoReport) {
    dependsOn['testDebugUnitTest']
    reports {
        html.required = true
        xml.required = true
        csv.required = false
    }

    def fileFilter = [
            '**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*',
            '**/*$ViewInjector*.*', '**/*$ViewBinder*.*', '**/*$Lambda$*.*', '**/*Companion*.*',
            '**/*Module*.*', '**/*Dagger*.*', '**/*Hilt*.*', '**/*MembersInjector*.*',
            '**/*_Factory*.*', '**/*_Provide*.*', '**/*Extensions*.*'
    ]

    def javaClasses = fileTree(dir:
            layout.buildDirectory.dir('intermediates/javac/debug/classes').get().asFile,
            excludes: fileFilter)

    def kotlinClasses = fileTree(dir:
            layout.buildDirectory.dir('tmp/kotlin-classes/debug').get().asFile,
            excludes: fileFilter)

    sourceDirectories.setFrom(files(["src/main/java"]))
    classDirectories.setFrom(files([javaClasses, kotlinClasses]))
    executionData.setFrom(fileTree(dir: layout.buildDirectory.get().asFile,
            includes: ["**/*.exec", "**/*.ec"]))
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.20.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.19.1'
    implementation 'org.projectlombok:lombok:1.18.30'
    implementation 'androidx.room:room-runtime:2.6.1'
    implementation 'androidx.test:core:1.7.0'
    implementation 'androidx.test.ext:junit:1.3.0'
    implementation 'androidx.exifinterface:exifinterface:1.4.1'
    annotationProcessor 'androidx.room:room-compiler:2.6.1'
    implementation 'net.zetetic:android-database-sqlcipher:4.5.4'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.11.4'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.11.4'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.4'
    testImplementation 'org.mockito:mockito-core:5.18.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.18.0'
    testImplementation 'com.github.blocoio:faker:2.0.1'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'org.mockito:mockito-android:3.12.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'org.hamcrest:hamcrest-library:3.0'
    androidTestImplementation 'com.github.blocoio:faker:2.0.1'
}